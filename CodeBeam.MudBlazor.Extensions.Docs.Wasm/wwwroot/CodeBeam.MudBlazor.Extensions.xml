<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeBeam.MudBlazor.Extensions</name>
    </assembly>
    <members>
        <member name="T:MudExtensions.MudBaseInputExtended`1">
            <summary>
            The extended base input fundamentals.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Disabled">
            <summary>
            Disable input component if true. Default is false.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.GetDisabledState">
            <summary>
            Get the input component is disabled or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.ReadOnly">
            <summary>
            If true, the input will be read-only.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.GetReadOnlyState">
            <summary>
            Get the input component is readonly or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnInput">
            <summary>
            Fires on input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnChange">
            <summary>
            Fires on change.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Typo">
            <summary>
            Set the text-align on the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.FullWidth">
            <summary>
            If true, the input will take up the full width of its container.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Immediate">
            <summary>
            If true, the input will update the Value immediately on typing.
            If false, the Value is updated only on Enter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Underline">
            <summary>
            If false, the input will not have an underline.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.HasAdornmentStart">
            <summary>
            Gets or sets a value indicating whether the component has an adornment at the start.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.HelperText">
            <summary>
            The HelperText will be displayed below the text field.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.HelperTextOnFocus">
            <summary>
            If true, the helper text will only be visible on focus.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AdornmentIcon">
            <summary>
            Icon that will be used if Adornment is set to Start or End.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AdornmentText">
            <summary>
            Text that will be used if Adornment is set to Start or End, the Text overrides Icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Adornment">
            <summary>
            The Adornment if used. By default, it is set to None.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AdornmentStart">
            <summary>
            The Adornment if used. By default, it is set to None.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AdornmentEnd">
            <summary>
            The Adornment if used. By default, it is set to None.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AdornmentAriaLabel">
            <summary>
            The aria-label of the adornment.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnlyValidateIfDirty">
            <summary>
            The validation is only triggered if the user has changed the input value at least once. By default, it is false
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.ShrinkLabel">
            <summary>
            If true shrinks label directly.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AdornmentColor">
            <summary>
            The color of the adornment if used. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.IconSize">
            <summary>
            The Icon Size.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnAdornmentClick">
            <summary>
            Button click event if set and Adornment used.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Variant">
            <summary>
            Variant to use.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Margin">
            <summary>
             Will adjust vertical spacing.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Placeholder">
            <summary>
            The short hint displayed in the input before the user enters a value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Counter">
            <summary>
            If set, will display the counter, value 0 will display current count but no stop count.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.MaxLength">
            <summary>
            Maximum number of characters that the input will accept
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Label">
            <summary>
            If string has value the label text will be displayed in the input, and scaled down at the top if the input has value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.AutoFocus">
            <summary>
            If true the input will focus automatically.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Lines">
            <summary>
             A multiline input (textarea) will be shown, if set to more than one line.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Text">
            <summary>
             The text to be displayed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.TextUpdateSuppression">
            <summary>
            When TextUpdateSuppression is true (which is default) the text can not be updated by bindings while the component is focused in BSS (not WASM).
            This solves issue #1012: Textfield swallowing chars when typing rapidly
            If you need to update the input's text while it is focused you can set this parameter to false.
            Note: on WASM text update suppression is not active, so this parameter has no effect.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.InputMode">
            <summary>
             Hints at the type of data that might be entered by the user while editing the input
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Pattern">
            <summary>
            The pattern attribute, when specified, is a regular expression which the input's value must match in order for the value to pass constraint validation. It must be a valid JavaScript regular expression
            Not Supported in multline input
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.ChildContentStyle">
            <summary>
            CSS style of the child content.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.ForceUpdate">
            <summary>
            Sync the value, values and text, calls validation manually. Useful to call after user changes value or text programmatically.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.GetInputType">
            <summary>
            Derived classes need to override this if they can be something other than text
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SetTextAsync(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="updateValue"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.UpdateTextPropertyAsync(System.Boolean)">
            <summary>
            Text change hook for descendants. Called when Text needs to be refreshed from current Value property.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.FocusAsync">
            <summary>
            Focus to the element.
            </summary>
            <returns>The ValueTask</returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.BlurAsync">
            <summary>
            Blur from the element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SelectAsync">
            <summary>
            Focus and select all text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            Focus and select partial text with given positions.
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.TextChanged">
            <summary>
            Fired when the text value changes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnBlur">
            <summary>
            Fired when the element loses focus.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnInternalInputChanged">
            <summary>
            Fired when the element changes internally its text value.
            </summary>
        </member>
        <member name="F:MudExtensions.MudBaseInputExtended`1._isFocused">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.OnBlurredAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnKeyDown">
            <summary>
            Fired on the KeyDown event.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.InvokeKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.KeyDownPreventDefault">
            <summary>
            Prevent the default action for the KeyDown event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.DisablePaste">
            <summary>
            If true disables paste to input component. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.OnKeyUp">
            <summary>
            Fired on the KeyUp event.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.InvokeKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.KeyUpPreventDefault">
            <summary>
            Prevent the default action for the KeyUp event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.ValueChanged">
            <summary>
            Fired when the Value property changes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Value">
            <summary>
            The value of this input element.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SetValueAsync(`0,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="updateText"></param>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.UpdateValuePropertyAsync(System.Boolean)">
            <summary>
            Value change hook for descendants. Called when Value needs to be refreshed from current Text property.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SetConverter(MudBlazor.Converter{`0,System.String})">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.Format">
            <summary>
            Conversion format parameter for ToString(), can be used for formatting primitive types, DateTimes and TimeSpans
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SetFormat(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.ValidateValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.OnInitializedAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.ForceRender(System.Boolean)">
            <summary>
            
            </summary>
            <param name="forceTextUpdate"></param>
            <returns></returns>
        </member>
        <member name="F:MudExtensions.MudBaseInputExtended`1._forceTextUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudBaseInputExtended`1.SkipUpdateProcessOnSetParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudBaseInputExtended`1.ResetValueAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.BarcodeResult">
            <summary>
            The result that used in MudBarcode component to show one of the barcode formats.
            </summary>
        </member>
        <member name="M:MudExtensions.BarcodeResult.#ctor(ZXing.Common.BitMatrix,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bitMatrix"></param>
            <param name="moduleSizeX"></param>
            <param name="moduleSizeY"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:MudExtensions.BarcodeResult.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.BarcodeResult.ModuleSizeX">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.BarcodeResult.ModuleSizeY">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.BarcodeResult.Rows">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.BarcodeResult.Item(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudBarcode">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.OuterStylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.BarcodeFormat">
            <summary>
            Determines which barcode format will shown. Default is QR Code.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.OuterClass">
            <summary>
            The outer div classname.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.OuterStyle">
            <summary>
            The outer div classname.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.EmptySrc">
            <summary>
            The image source shows when the value is null.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.Clickable">
            <summary>
            If true, it goes to specified href when click.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.ErrorText">
            <summary>
            The error content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.Width">
            <summary>
            The width value as integer.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.Height">
            <summary>
            The height value as integer.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.ForceHeight">
            <summary>
            Use this value on not square sized barcode formats like UPC_A and UPC_E.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.StrokeWidth">
            <summary>
            Increase the stroke width if readers can not read the barcode easily.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.Target">
            <summary>
            Determines how user go to href content. Default is open in a new tab.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.Value">
            <summary>
            The value of the barcode format.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.Color">
            <summary>
            The color of the barcode as string. Accepts all kinds of CSS property values. (ex. #123456) Default is "black".
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.BackgroundColor">
            <summary>
            The background color of the barcode as string. Accepts all kinds of CSS property values. (ex. #123456) Default is "white".
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.ValueChanged">
            <summary>
            Fires when value changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudBarcode.ChildContent">
            <summary>
            Shows a component inside the barcode.
            </summary>
        </member>
        <member name="M:MudExtensions.MudBarcode.GetCode">
            <summary>
            Barcode process that returns BarcodeResult. Returns null if value is also null or empty.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudChipField`1">
            <summary>
            A Mud input component has special features to working with chips.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ChipClassname">
            <summary>
            Protected classes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ChipStylename">
            <summary>
            Protected styles.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.Values">
            <summary>
            /The list of values.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ValuesChanged">
            <summary>
            Fires when values changed
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.AllowSameValues">
            <summary>
            If false, pressing delimeter key has no effect if the value is already in values. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ChipSize">
            <summary>
            Determines chip size with small, medium or large values.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.Delimiter">
            <summary>
            The char that created a new chip with current value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ClassChip">
            <summary>
            CSS classes of the chips, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.StyleChip">
            <summary>
            CSS styles of the chips.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ChipColor">
            <summary>
            Color of the chips.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ChipVariant">
            <summary>
            Variant of the chips.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.WrapChips">
            <summary>
            If true, the chips that exceed width goes to the below line.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.Closeable">
            <summary>
            Determines that chips have close button. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.BackspaceChipRemoval">
            <summary>
            Removes last created chip value when press Backspace. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.MaxChips">
            <summary>
            Maximum chip count. Set 0 to unlimited. Default is 0.
            </summary>
        </member>
        <member name="P:MudExtensions.MudChipField`1.ChipsMaxWidth">
            <summary>
            Max width for each chip as integer value. Default is 80.
            </summary>
        </member>
        <member name="M:MudExtensions.MudChipField`1.HandleKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected keydown event.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudChipField`1.HandleKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected keyup event.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudChipField`1.SetChips">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudChipField`1.Closed(MudBlazor.MudChip{`0})">
            <summary>
            Remove process of the specified chip.
            </summary>
            <param name="chip"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudChipField`1.ClearTextField">
            <summary>
            Clear the text field.
            </summary>       
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudCodeInput`1">
            <summary>
            Inputs which each input box can contain only one character.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.#ctor">
            <summary>
            MudCodeInput constructor.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Classname">
            <summary>
            Protected classes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.InputClassname">
            <summary>
            Protected classes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.InputClass">
            <summary>
            The CSS classes for each input, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.InnerClass">
            <summary>
            The CSS classes for input container div, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.InnerStyle">
            <summary>
            The CSS styles for input container div.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.InputType">
            <summary>
            Type of the input element. It should be a valid HTML5 input type.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Value">
            <summary>
            The value of the input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.ValueChanged">
            <summary>
            The event fires when value changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Count">
            <summary>
            The number of text fields.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Spacing">
            <summary>
            Determines the spacing between each input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Disabled">
            <summary>
            If true disables the component. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.ReadOnly">
            <summary>
            If true removes all interactivity of the component. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Variant">
            <summary>
            Variant of the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCodeInput`1.Margin">
            <summary>
            Margin of the component that determines component size.
            </summary>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.HandleKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected keydown event.
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.CheckFocus(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.FocusNext">
            <summary>
            Focuses next input box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.FocusPrevious">
            <summary>
            Focuses previous input box.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.SetValue">
            <summary>
            Set value for the input boxes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudCodeInput`1.SetValueFromOutside(`0)">
            <summary>
            Call this method to set value programmatically.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudColorProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudColorProvider.GetRGBString(System.String,System.Int32)">
            <summary>
            Get CSS property value as RGB format.
            </summary>
            <param name="hex"></param>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudColorProvider.HexToRgb(System.String,System.Int32)">
            <summary>
            Converts HEX value to RGB format.
            </summary>
            <param name="s"></param>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudColorProvider.ConvertRGBTone(System.Int32,System.Double)">
            <summary>
            Implements RGB tone algorithm.
            </summary>
            <param name="val"></param>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudColorProvider.SingleHexValue(System.String)">
            <summary>
            Hex value to int calculator.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudColorProvider.Primary">
            <summary>
            The hex value of primary color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.Secondary">
            <summary>
            The hex value of secondary color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.Tertiary">
            <summary>
            The hex value of tertiary color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.Neutral">
            <summary>
            The hex value of neutral color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.NeutralVariant">
            <summary>
            The hex value of neutral variant color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.Error">
            <summary>
            The hex value of error color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.CustomColors">
            <summary>
            The hex values of custom colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.MainTone">
            <summary>
            The color shade between 0 (black) and 100 (white). Default is 40 (20 for dark mode). If its on default, the value will change automatically for dark mode.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.ContainerTone">
            <summary>
            The color shade between 0 (black) and 100 (white) for container colors. Default is 90 (30 for dark mode). If its on default, the value will change automatically for dark mode.
            </summary>
        </member>
        <member name="P:MudExtensions.MudColorProvider.Override">
            <summary>
            If true, the current CSS variables also be overriden (--mud-palette-primary etc.). Default is false.
            </summary>
        </member>
        <member name="T:MudExtensions.MudComboBox`1">
            <summary>
            Component that has select and autocomplete features.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.#ctor">
            <summary>
            Constructor for ComboBox
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SetSearchString(`0)">
            <summary>
            Protected search string converter.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Items">
            <summary>
            Item list of ComboBox.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.EligibleItems">
            <summary>
            Eligible items of ComboBox.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1._currentIcon">
            <summary>
            Icon string.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Classname">
            <summary>
            Main CSS classes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.InputClassname">
            <summary>
            Input CSS classes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.PopoverClassname">
            <summary>
            CSS classes for popover content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.MockInputStylename">
            <summary>
            CSS styles for mock input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Editable">
            <summary>
            If true, combobox goes to autocomplete mode.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.EnableFilter">
            <summary>
            If false, all items are eligible regarding what user search in textfield.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Highlight">
            <summary>
            If true, searched text has highlight.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.HighlightClass">
            <summary>
            Overrides the highlight class.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Bordered">
            <summary>
            If true, selected or active items in popover has border.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.InputClass">
            <summary>
            User class names for the input, separated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.InputStyle">
            <summary>
            User style names for the input, separated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.OnOpen">
            <summary>
            Fired when dropdown opens.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.OnClose">
            <summary>
            Fired when dropdown closes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ChildContent">
            <summary>
            Add the MudComboBoxItems here.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.PopoverStartContent">
            <summary>
            Content that placed on top in popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.PopoverEndContent">
            <summary>
            Content that placed on bottom in popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.NoItemsContent">
            <summary>
            Content that shown when no items found.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ItemTemplate">
            <summary>
            Optional presentation template for items
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ItemSelectedTemplate">
            <summary>
            Optional presentation template for selected items
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ItemDisabledTemplate">
            <summary>
            Optional presentation template for disabled items
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ItemDisabledFunc">
            <summary>
            Function to be invoked when checking whether an item should be disabled or not. Works both with renderfragment and ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.TemplateClass">
            <summary>
            Classname for item template or chips.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SelectValueOnTab">
            <summary>
            If true the active (hilighted) item select on tab key. Designed for only single selection. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.PopoverClass">
            <summary>
            User class names for the popover, separated by space
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SearchBoxPlaceholder">
            <summary>
            The text that shown on empty searchbox.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Dense">
            <summary>
            If true, compact vertical padding will be applied to all Select items.
            </summary>
            <remarks>The default is <see cref="F:MudExtensions.Dense.Standard"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.OpenIcon">
            <summary>
            The Open Select Icon
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Icons.Material.Filled.ArrowDropDown"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.CloseIcon">
            <summary>
            The Close Select Icon
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Icons.Material.Filled.ArrowDropUp"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Color">
            <summary>
            Dropdown color of select. Supports theme colors.
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Color.Primary"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.TextColor">
            <summary>
            The color of the text. It supports the theme colors.
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Color.Default"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.CheckBoxCheckedColor">
            <summary>
            The color of the checked checkbox. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.CheckBoxUnCheckedColor">
            <summary>
            The color of the unchecked checkbox. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.CheckBoxSize">
            <summary>
            The size of the checkbox.
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Size.Medium"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.InputPresenter">
            <summary>
            The input's visual.
            </summary>
            <remarks>The default is <see cref="F:MudExtensions.ValuePresenter.Text"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ItemPresenter">
            <summary>
            The items' visual in popover.
            </summary>
            <remarks>The default is <see cref="F:MudExtensions.ValuePresenter.Text"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ShowCheckbox">
            <summary>
            If true, shows checkbox when multiselection is true.
            </summary>
            <remarks>The default is <c>true</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SelectAll">
            <summary>
            If set to true and the MultiSelection option is set to true, a "select all" checkbox is added at the top of the list of items.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SelectAllPosition">
            <summary>
            Sets position of the Select All checkbox
            </summary>
            <remarks>The default is <see cref="F:MudExtensions.SelectAllPosition.BeforeSearchBox"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SelectAllText">
            <summary>
            Define the text of the Select All option.
            </summary>
            <remarks>The default is <c>Select All</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.MultiSelectionTextFunc">
            <summary>
            Function to define a customized multiselection text.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SearchFunc">
            <summary>
            Custom search func for searchbox. If doesn't set, it search with "Contains" logic by default. Passed value and searchString values.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ChipCloseable">
            <summary>
            If true, chips has close button and remove from SelectedValues when pressed the close button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ChipClass">
            <summary>
            CSS classes for chips.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ChipVariant">
            <remarks>The default is <see cref="F:MudBlazor.Variant.Filled"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ChipSize">
            <remarks>The default is <see cref="F:MudBlazor.Size.Small"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Delimiter">
            <summary>
            Parameter to define the delimited string separator.
            </summary>
            <remarks>The default is <c>, </c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.RelativeWidth">
            <summary>
            If true popover width will be the same as the combobox component.
            </summary>
            <remarks>The default is <c>true</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.MaxHeight">
            <summary>
            Sets the maxheight of the popover.
            </summary>
            <remarks>The default is <c>300</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.AnchorOrigin">
            <summary>
            Set the anchor origin point to determine where the popover will open from.
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Origin.BottomCenter"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.TransformOrigin">
            <summary>
            Sets the transform origin point for the popover.
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Origin.TopCenter"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Strict">
            <summary>
            If false, combobox allows value from out of bound.
            </summary>
            <remarks>The default is <c>true</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.OpenMenuAfterClear">
            <summary>
            If <c>true</c> will open the menu when the clear button is clicked.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SearchBox">
            <summary>
            If true, shows a searchbox for filtering items. Only works with ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SearchBoxAutoFocus">
            <summary>
            If true, the search-box will be focused when the dropdown is opened.
            </summary>
            <remarks>The default is <c>true</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SearchBoxClearable">
            <summary>
            If true, the search-box has a clear icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.LockScroll">
            <summary>
            If true, prevent scrolling while dropdown is open.
            </summary>
            <remarks>The default is <c>true</c></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.IndeterminateIcon">
            <summary>
            Custom indeterminate icon.
            </summary>
            <remarks>The default is <see cref="F:MudBlazor.Icons.Material.Filled.IndeterminateCheckBox"/></remarks>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.MultiSelection">
            <summary>
            If true, multiple values can be selected via checkboxes which are automatically shown in the dropdown
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ToggleSelection">
            <summary>
            If true, clicking on selected item can unselect the item.
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SyncMultiselectionValues(System.Boolean)">
            <summary>
            Protected selectedvalues sync.
            </summary>
            <param name="singleToMultiselection"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.Comparer">
            <summary>
            The Comparer to use for comparing selected values internally.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.ToStringFunc">
            <summary>
            Defines how values are displayed in the drop-down list
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SelectedValues">
            <summary>
            Set of selected values. If MultiSelection is false it will only ever contain a single value. This property is two-way bindable.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.SelectedValuesChanged">
            <summary>
            Fires when SelectedValues changes.
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.UpdateDataVisualiserTextAsync">
            <summary>
            Protected method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.UpdateComboBoxValueAsync(`0,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="updateText"></param>
            <param name="updateSearchString"></param>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="F:MudExtensions.MudComboBox`1._dataVisualiserText">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.GetPresenterText">
            <summary>
            Gets DataVisualiserText.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.OnParametersSetAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.DisposeAsyncCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.HandleKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected keydown event.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SearchBoxHandleKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected searchbox keydown event.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SearchBoxHandleKeyUp(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected searchbox keyup event.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.HandleKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Protected keyup event.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.HandleOnBlur(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Protected blur event.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.HandleInternalValueChanged(System.String)">
            <summary>
            
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.FocusAsync">
            <summary>
            Focuses the component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.BlurAsync">
            <summary>
            Blur from the component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SelectAsync">
            <summary>
            Focus and select all text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            Focus and select partial text regard of given positions.
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ToggleMenu">
            <summary>
            Toggles the menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.OpenMenu">
            <summary>
            Opens menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.CloseMenu">
            <summary>
            Closes menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ToggleOption(MudExtensions.MudComboBoxItem{`0},System.Boolean)">
            <summary>
            Select or unselect the ComboBoxItem.
            </summary>
            <param name="item"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.DeselectAllItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ForceUpdate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.AddItem(MudExtensions.MudComboBoxItem{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.RemoveItem(MudExtensions.MudComboBoxItem{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ClearButtonClickHandlerAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Extra handler for clearing selection.
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.Clear">
            <summary>
            Clear the selection
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ResetValueAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.UpdateIcon">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.HasValue(`0)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ChipClosed(MudBlazor.MudChip{`0})">
            <summary>
            
            </summary>
            <param name="chip"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.SelectAllItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.GetAllSelectedState">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ForceRenderItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ForceUpdateItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.DeactiveAllItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ActivateFirstItem(System.String)">
            <summary>
            Highlights the first item.
            </summary>
            <param name="firstLetter"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ActivateAdjacentItem(System.Int32)">
            <summary>
            Highlight previous or next items.
            </summary>
            <param name="changeCount"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ActivateLastItem">
            <summary>
            Highlights the last item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.GetEnabledAndEligibleItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.HasEligibleItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.GetSearchString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.GetTypo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBox`1.ScrollToMiddleAsync(MudExtensions.MudComboBoxItem{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.EffectiveCheckBoxCheckedColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBox`1.EffectiveCheckBoxUnCheckedColor">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudComboBoxItem`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.HighlighterClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.MudComboBox">
            <summary>
            The parent select component
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Disabled">
            <summary>
            Prevents the user from interacting with this item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Ripple">
            <summary>
            Shows a ripple effect when the user clicks the button.
            </summary>
            <remarks>
            Defaults to <c>true</c>.
            </remarks>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Text">
            <summary>
            The text to display
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Value">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.ChildContent">
            <summary>
            The content within this item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.TextColor">
            <summary>
            The color of the text. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.CheckBoxCheckedColor">
            <summary>
            The color of the checked checkbox. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.CheckBoxUnCheckedColor">
            <summary>
            The color of the unchecked checkbox. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.CheckBoxSize">
            <summary>
            The size of the checkbox.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.OnClick">
            <summary>
            OnClick event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Selected">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Active">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.SetActive(System.Boolean)">
            <summary>
            Change the item's active status.
            </summary>
            <param name="isActive"></param>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.Eligible">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudComboBoxItem`1.DisplayString">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.ForceRender">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.ForceUpdate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.CheckEligible">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.IsEligible">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.SyncSelected">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.HandleOnClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudComboBoxItem`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudExpectedHeader">
            <summary>
            Default fields in your database
            </summary>
        </member>
        <member name="F:MudExtensions.MudExpectedHeader.RequiredCss">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudExpectedHeader.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudExpectedHeader.Required">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudExpectedHeader.AllowDefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudExpectedHeader.CreatingDefaultValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudExpectedHeader.MatchedFieldCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudExpectedHeader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudExpectedHeader.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MudExtensions.MudExpectedHeader.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="required"></param>
        </member>
        <member name="M:MudExtensions.MudExpectedHeader.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="required"></param>
            <param name="allowDefaultValue"></param>
        </member>
        <member name="T:MudExtensions.MudCsvHeader">
            <summary>
            Header fields in your CSV File
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvHeader.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvHeader.MappedField">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudCsvHeader.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="mappedField"></param>
        </member>
        <member name="T:MudExtensions.MudCsvMapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.LocalizedStrings">
            <summary>
            A class for provide all local strings at once.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.ExpectedHeaders">
            <summary>
            Choose Table Column Headers
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.CsvFile">
            <summary>
            CsvFile as BrowserFile
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.FileContentByte">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.CsvMapping">
            <summary>
            Use this dictionary if you want to see what was mapped.
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.OnImported">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.ShowIncludeUnmappedData">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.AllowCreateExpectedHeaders">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.NormalizeHeaders">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudCsvMapper.Delimiter">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudCsvMapper.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudDateWheelPicker">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.InputReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.PopoverClass">
            <summary>
            CSS classes for popover content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.PopoverStyle">
            <summary>
            CSS styles for popover content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.DateFormat">
            <summary>
            The date format that determines the text and wheel order. Default is Thread.CurrentThread.CurrentUICulture.DateTimeFormat.ShortDatePattern.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.SubmitOnClose">
            <summary>
            If false, users have to click the "done" button to submit value before close popover. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Sensitivity">
            <summary>
            The minimum swipe delta to change wheel value on touch devices. Default is 30.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.FixYear">
            <summary>
            If true, the year wheel is disabled.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.FixMonth">
            <summary>
            If true, the month wheel is disabled.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.FixHour">
            <summary>
            If true, the hour wheel is disabled.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.FixMinute">
            <summary>
            If true, the minute wheel is disabled.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.FixSecond">
            <summary>
            If true, the second wheel is disabled.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.FixDay">
            <summary>
            If true, the day wheel is disabled.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Editable">
            <summary>
            If true, only adornment click opens popover and users can directly write to the input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Dense">
            <summary>
            Determines the wheels are dense or not.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Color">
            <summary>
            The color of various parts of the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.ColorTime">
            <summary>
            The time wheels (hour, minute and second) color. If its inherit (by default) it takes the Color value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.ShowHeader">
            <summary>
            Show wheel labels.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.ShowToolbar">
            <summary>
            Show toolbar that allows change between DateViews dynamically.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.LocalizedStrings">
            <summary>
            A class for provide all local strings at once.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.DateView">
            <summary>
            Determines the view of wheels.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Days">
            <summary>
            Displayed number range as days.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Months">
            <summary>
            Displayed number range as months.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Years">
            <summary>
            Displayed number range as years.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Hours">
            <summary>
            Displayed number range as hours.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Minutes">
            <summary>
            Displayed number range as minutes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.Seconds">
            <summary>
            Displayed number range as seconds.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.MaxHeight">
            <summary>
            Max height of popover content. Default is 300.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.InputAdornmentIcon">
            <summary>
            The icon displayed as adornment in input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.InputAdornment">
            <summary>
            The adornment position in input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.AnchorOrigin">
            <summary>
            Sets the anchor origin point for the popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.TransformOrigin">
            <summary>
            Sets the transform origin point for the popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.LockScroll">
            <summary>
            If true, prevent scrolling while dropdown is open.
            </summary>
        </member>
        <member name="P:MudExtensions.MudDateWheelPicker.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.UpdateValueAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateText"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.ToggleMenu">
            <summary>
            Toggles the menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.OpenMenu">
            <summary>
            Opens the menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.CloseMenu(System.Boolean)">
            <summary>
            Closes the menu.
            </summary>
            <param name="submit"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.HandleOnBlur">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.HandleAdornmentClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.ExpandDateView(MudExtensions.DateView)">
            <summary>
            
            </summary>
            <param name="dateView"></param>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.ToggleDateView">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.SetWheelValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.FocusAsync">
            <summary>
            Focuses the component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.BlurAsync">
            <summary>
            Blur from the component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.SelectAsync">
            <summary>
            Focus and select all text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            Focus and select partial text show with positions.
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.ResetValueAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.HasSeconds">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.NumberToString(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.Clear">
            <summary>
            Clear the text field, set Value to default(T) and Text to null
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.HandleClearButtonClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDateWheelPicker.SetText(System.String)">
            <summary>
            Sets the input text from outside programmatically
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudFontPicker">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudFontPicker.Font">
            <summary>
            Selected font.
            </summary>
        </member>
        <member name="P:MudExtensions.MudFontPicker.FontCollection">
            <summary>
            Fonts will show in popover. Default is Google latin font list.
            </summary>
        </member>
        <member name="P:MudExtensions.MudFontPicker.RootImportUrl">
            <summary>
            The css import url for adding custom fonts. Default is google font url. Ex. 'https://font.something.com'
            </summary>
        </member>
        <member name="P:MudExtensions.MudFontPicker.StaticInputText">
            <summary>
            If true, the input's label and text always use the theme font instead of font picker's value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudFontPicker.FontChanged">
            <summary>
            Fires on font changed.
            </summary>
        </member>
        <member name="M:MudExtensions.MudFontPicker.ImportFontStyleText(System.String)">
            <summary>
            Import selected font automatically.
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudFontPicker.ClearFont">
            <summary>
            Clears selected font.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudFontPicker.SetFontValue(System.String)">
            <summary>
            
            </summary>
            <param name="font"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudGallery">
            <summary>
            Gallery component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ImageStylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ClassSelectedImage">
            <summary>
            CSS classes for selected image.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.StyleSelectedImage">
            <summary>
            CSS styles for selected image.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ItemPerLine">
            <summary>
            Sets how many images show per gallery line. Default is 3.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.EnableBackdropClick">
            <summary>
            If true, closes selected image on backdrop click. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.EnableAnimation">
            <summary>
            If true, disables the default animation on image changing.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ShowToolboxCloseButton">
            <summary>
            If true, close button shows on selected imgae view.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ShowToolboxNavigationButtons">
            <summary>
            If true, toolbox buttons shows on selected imgae view.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.MaxWidth">
            <summary>
            The max width for selected image. The remaining space fills with an overlay. Default is Medium.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ToolboxTopContent">
            <summary>
            Renderfragment for top section on selected view.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ToolboxBottomContent">
            <summary>
            Renderfragment for bottom section on selected view.
            </summary>
        </member>
        <member name="P:MudExtensions.MudGallery.ImageSource">
            <summary>
            Gallery's image source.
            </summary>
        </member>
        <member name="M:MudExtensions.MudGallery.ImageClick(System.String)">
            <summary>
            
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:MudExtensions.MudGallery.ChangeMenu(System.Boolean)">
            <summary>
            Change menu visible.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:MudExtensions.MudGallery.SetAdjacentImage(System.Int32)">
            <summary>
            
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudGallery.GetSelectedImageIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudDebouncedInputExtended`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudDebouncedInputExtended`1.DebounceInterval">
            <summary>
            Interval to be awaited in milliseconds before changing the Text value
            </summary>
        </member>
        <member name="P:MudExtensions.MudDebouncedInputExtended`1.OnDebounceIntervalElapsed">
            <summary>
            callback to be called when the debounce interval has elapsed
            receives the Text as a parameter
            </summary>
        </member>
        <member name="M:MudExtensions.MudDebouncedInputExtended`1.OnChanged">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDebouncedInputExtended`1.UpdateValuePropertyAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateText"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudDebouncedInputExtended`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudDebouncedInputExtended`1.DisposeAsyncCore">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudInputExtended`1">
            <summary>
            The extended input component.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.InputClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.AdornmentClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.AdornmentStartClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.AdornmentEndClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ClearButtonClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ChildContentClassname">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ShowVisualiser">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.DataVisualiserStyle">
            <summary>
            CSS styles for data visualiser container.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.InputType">
            <summary>
            Type of the input element. It should be a valid HTML5 input type.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.InputTypeString">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.OnInputHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.OnChangeHandler(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.ForceAutoSize">
            <summary>
            Forces input height to fit the text content.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.AutoSize">
            <summary>
            If true, automatically resize the height regard to the text. Needs Lines parameter to set more than 1.
            </summary>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.OnPaste(Microsoft.AspNetCore.Components.Web.ClipboardEventArgs)">
            <summary>
            Paste hook for descendants.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ChildContent">
            <summary>
            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ElementReference">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.FocusAsync">
            <summary>
            Focuses component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.BlurAsync">
            <summary>
            Blur from component.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.SelectAsync">
            <summary>
            Focus and select all text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            Focus and select partial text described with positions.
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.OnIncrement">
            <summary>
            Invokes the callback when the Up arrow button is clicked when the input is set to <see cref="F:MudBlazor.InputType.Number"/>.
            Note: use the optimized control <see cref="T:MudBlazor.MudNumericField`1"/> if you need to deal with numbers.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.OnDecrement">
            <summary>
            Invokes the callback when the Down arrow button is clicked when the input is set to <see cref="F:MudBlazor.InputType.Number"/>.
            Note: use the optimized control <see cref="T:MudBlazor.MudNumericField`1"/> if you need to deal with numbers.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.HideSpinButtons">
            <summary>
            Hides the spin buttons.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.DataVisualiser">
            <summary>
            DavaVisualiser content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ForceClearable">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.OnMouseWheel">
            <summary>
            Mouse wheel event for input.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.ClearIcon">
            <summary>
            Custom clear icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.NumericUpIcon">
            <summary>
            Custom numeric up icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputExtended`1.NumericDownIcon">
            <summary>
            Custom numeric down icon.
            </summary>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.UpdateTextPropertyAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateValue"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.UpdateValuePropertyAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateText"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.ClearButtonClickHandlerAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudInputExtended`1.SetText(System.String)">
            <summary>
            Sets the input text from outside programmatically
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudJsonTreeView">
            <summary>
            Represents a tree view which displays a snippet of JSON.
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeView.Json">
            <summary>
            The JSON to be displayed.
            </summary>
            <remarks>
            Use the <see cref="P:MudExtensions.MudJsonTreeView.Root"/> parameter instead if you have a <see cref="T:System.Text.Json.Nodes.JsonNode"/> available.
            </remarks>
        </member>
        <member name="P:MudExtensions.MudJsonTreeView.Root">
            <summary>
            The root node of the JSON to display.
            </summary>
            <remarks>
            Use the <see cref="P:MudExtensions.MudJsonTreeView.Json"/> parameter instead if you only have JSON available as a string.
            </remarks>
        </member>
        <member name="M:MudExtensions.MudJsonTreeView.SetJson(System.String)">
            <summary>
            Sets the <see cref="P:MudExtensions.MudJsonTreeView.Json"/> property and raises the <see cref="P:MudExtensions.MudJsonTreeView.OnJsonChanged"/> event.
            </summary>
            <param name="json">The new JSON to use.</param>
        </member>
        <member name="M:MudExtensions.MudJsonTreeView.SetJson(System.Text.Json.Nodes.JsonNode)">
            <summary>
            Sets the <see cref="P:MudExtensions.MudJsonTreeView.Json"/> property and raises the <see cref="P:MudExtensions.MudJsonTreeView.OnJsonChanged"/> event.
            </summary>
            <param name="json">The new JSON to use.</param>
        </member>
        <member name="P:MudExtensions.MudJsonTreeView.OnJsonChanged">
            <summary>
            Occurs when the JSON has changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeView.Dense">
            <summary>
            Gets or sets a value indicating whether the tree contents are compacted.
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeView.Hover">
            <summary>
            Gets or sets a value indicating whether the current row is highlighted.
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeView.Sorted">
            <summary>
            Gets or sets a value indicating whether items are sorted by key.
            </summary>
        </member>
        <member name="T:MudExtensions.MudJsonTreeViewNode">
            <summary>
            Represents the child leaf of a JSON tree view.
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeViewNode.Node">
            <summary>
            Gets or sets the node to display (including children).
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeViewNode.Sorted">
            <summary>
            Gets or sets a value indicating whether items are sorted by key.
            </summary>
        </member>
        <member name="P:MudExtensions.MudJsonTreeViewNode.Text">
            <summary>
            Gets or sets a children text.
            </summary>
        </member>
        <member name="T:MudExtensions.MudListExtended`1">
            <summary>
            The list component with extended features.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Stylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.MudSelectExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.MudAutocomplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ParentList">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Color">
            <summary>
            The color of the selected List Item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ItemTemplate">
            <summary>
            Optional presentation template for items
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ItemSelectedTemplate">
            <summary>
            Optional presentation template for selected items
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ItemDisabledTemplate">
            <summary>
            Optional presentation template for disabled items
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectAllTemplate">
            <summary>
            Optional presentation template for select all item
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ItemDisabledFunc">
            <summary>
            Function to be invoked when checking whether an item should be disabled or not. Works both with renderfragment and ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Converter">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Comparer">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ToStringFunc">
            <summary>
            Defines how values are displayed in the drop-down list
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ItemCollection">
            <summary>
            Predefined enumerable items. If its not null, creates list items automatically.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchFunc">
            <summary>
            Custom search func for searchbox. If doesn't set, it search with "Contains" logic by default. Passed value and searchString values.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchBox">
            <summary>
            If true, shows a searchbox for filtering items. Only works with ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchBoxVariant">
            <summary>
            Search box text field variant.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchBoxAdornment">
            <summary>
            Search box icon position.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchBoxAutoFocus">
            <summary>
            If true, the search-box will be focused when the dropdown is opened.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchBoxClearable">
            <summary>
            If true, the search-box has a clear icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.ClassSearchBox">
            <summary>
            SearchBox's CSS classes, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SearchBoxPlaceholder">
            <summary>
            The text shown when searchbox is empty.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.OnSearchStringChange">
            <summary>
            Fired when the search value changes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Virtualize">
            <summary>
            Allows virtualization. Only work if ItemCollection parameter is not null.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.MaxItems">
            <summary>
            Set max items to show in list. Other items can be scrolled. Works if list items populated with ItemCollection parameter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.OverscanCount">
            <summary>
            Overscan value for Virtualized list. Default is 2.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.MultiSelection">
            <summary>
            Allows multi selection and adds MultiSelectionComponent for each list item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.MultiSelectionAlign">
            <summary>
            The MultiSelectionComponent's placement. Accepts Align.Start and Align.End
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.MultiSelectionComponent">
            <summary>
            The component which shows as a MultiSelection check.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Clickable">
            <summary>
            Set true to make the list items clickable. This is also the precondition for list selection to work.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectValueOnTab">
            <summary>
            If true the active (hilighted) item select on tab key. Designed for only single selection. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Padding">
            <summary>
            If true, vertical padding will be removed from the list.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.EnableSelectedItemStyle">
            <summary>
            If true, selected items doesn't have a selected background color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Dense">
            <summary>
            If true, compact vertical padding will be applied to all list items.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Gutters">
            <summary>
            If true, the left and right padding is removed on all list items.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.Disabled">
            <summary>
            If true, will disable the list item if it has onclick.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectAll">
            <summary>
            If set to true and the MultiSelection option is set to true, a "select all" checkbox is added at the top of the list of items.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectAllPosition">
            <summary>
            Sets position of the Select All checkbox
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectAllText">
            <summary>
            Define the text of the Select All option.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SecondaryBackgroundForNestedItemHeader">
            <summary>
            If true, change background color to secondary for all nested item headers.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.OnKeyDown">
            <summary>
            Fired on the KeyDown event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.OnFocusOut">
            <summary>
            Fired on the OnFocusOut event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.OnDoubleClick">
            <summary>
            Fired on the OnDoubleClick event.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.HandleCentralValueCommander(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="changedValueType"></param>
            <param name="updateStyles"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.UpdateSelectedItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.UpdateSelectedValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedValue">
            <summary>
            The current selected value.
            Note: Make the list Clickable or set MultiSelection true for item selection to work.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedValues">
            <summary>
            The current selected values. Holds single value (SelectedValue) if MultiSelection is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedItem">
            <summary>
            The current selected list item.
            Note: make the list Clickable or MultiSelection or both for item selection to work.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedItems">
            <summary>
            The current selected listitems.
            Note: make the list Clickable for item selection to work.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedValueChanged">
            <summary>
            Called whenever the selection changed. Can also be called even MultiSelection is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedValuesChanged">
            <summary>
            Called whenever selected values changes. Can also be called even MultiSelection is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedItemChanged">
            <summary>
            Called whenever the selected item changed. Can also be called even MultiSelection is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectedItemsChanged">
            <summary>
            Called whenever the selected items changed. Can also be called even MultiSelection is false.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.GetAllItems">
            <summary>
            Get all MudListItems in the list.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.GetItems">
            <summary>
            Get all items that holds value.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.Register(MudExtensions.MudListItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.Unregister(MudExtensions.MudListItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.Register(MudExtensions.MudListExtended{`0})">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.Unregister(MudExtensions.MudListExtended{`0})">
            <summary>
            
            </summary>
            <param name="child"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.SearchBoxHandleKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Searchbox keydown event.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.HandleKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Keydown event.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.HandleOnFocusOut">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.HandleOnScroll">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.SearchChanged(System.String)">
            <summary>
            
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.SetSelectedValue(`0,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="force"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.SetSelectedValue(MudExtensions.MudListItemExtended{`0},System.Boolean)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="force"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.UpdateSelectedStyles(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="deselectFirst"></param>
            <param name="update"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.IsSelectable">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.DeselectAllItems(System.Collections.Generic.List{MudExtensions.MudListItemExtended{`0}})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.CollectAllMudListItems(System.Boolean)">
            <summary>
            
            </summary>
            <param name="exceptNestedAndExceptional"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.UpdateSelectAllState">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.SelectAllCheckBoxIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.CheckedIcon">
            <summary>
            Custom checked icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.UncheckedIcon">
            <summary>
            Custom unchecked icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListExtended`1.IndeterminateIcon">
            <summary>
            Custom indeterminate icon.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.SelectAllItems(System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="deselect"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.GetActiveItemIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.GetActiveItemValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.UpdateLastActivatedItem(`0)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.DeactiveAllItems(System.Collections.Generic.List{MudExtensions.MudListItemExtended{`0}})">
            <summary>
            
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ActiveFirstItem(System.String)">
            <summary>
            
            </summary>
            <param name="startChar"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ActiveAdjacentItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="changeCount"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ActivePreviousItem">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ActiveLastItem">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.Clear">
            <summary>
            Clears value(s) and item(s) and deactive all items.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ScrollToMiddleAsync(MudExtensions.MudListItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.GetSearchedItems">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ForceUpdate">
            <summary>
            Refresh all styles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.ForceUpdateItems">
            <summary>
            Refresh all items.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListExtended`1.OnDoubleClickHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs,`0)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <param name="itemValue"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.ListItemClickEventArgs`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.ListItemClickEventArgs`1.MouseEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.ListItemClickEventArgs`1.ItemValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudListItemExtended`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.NavigationManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.MudListExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ParentListItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.MultiSelectClassName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ItemId">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.IsFunctional">
            <summary>
            Functional items does not hold values. If a value set on Functional item, it ignores by the MudList. They can not count on Items list (they count on AllItems), cannot be subject of keyboard navigation and selection.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Text">
            <summary>
            The text to display
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.SecondaryText">
            <summary>
            The secondary text to display
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Value">
            <summary>
            Value of the item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Avatar">
            <summary>
            Avatar to use if set.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.AvatarClass">
            <summary>
            Avatar CSS Class to apply if Avatar is set.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Href">
            <summary>
            Link to a URL when clicked.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ForceLoad">
            <summary>
            If true, force browser to redirect outside component router-space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Disabled">
            <summary>
            If true, will disable the list item if it has onclick.
            The value can be overridden by the parent list.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Gutters">
            <summary>
            If true, the left and right padding is removed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Ripple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.OverrideMultiSelectionComponent">
            <summary>
            Overrided component for multiselection. Keep it null to have default one that MudList has.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Icon">
            <summary>
            Icon to use if set.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.IconColor">
            <summary>
            The color of the icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.IconSize">
            <summary>
            Sets the Icon Size.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.AdornmentColor">
            <summary>
            The color of the adornment if used. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ExpandLessIcon">
            <summary>
            Custom expand less icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ExpandMoreIcon">
            <summary>
            Custom expand more icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Inset">
            <summary>
            If true, the List Subheader will be indented.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.OnClickStopPropagation">
            <summary>
            If true, stop propagation on click. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Dense">
            <summary>
            If true, compact vertical padding will be used.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.OnClickHandlerPreventDefault">
            <summary>
            Prevent default behavior when click on MudSelectItem. Default behavior is selecting the item and style adjustments.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ChildContent">
            <summary>
            Display content of this list item. If set, overrides Text.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.NestedList">
            <summary>
            Add child list items here to create a nested list.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.OnClick">
            <summary>
            List click event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.InitiallyExpanded">
            <summary>
            If true, expands the nested list on first display.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.Expanded">
            <summary>
            Expand or collapse nested list. Two-way bindable. Note: if you directly set this to
            true or false (instead of using two-way binding) it will force the nested list's expansion state.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.ExpandedChanged">
            <summary>
            Called when expanded state change.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListItemExtended`1.IsSelected">
            <summary>
            Selected state of the option. Readonly. Use SetSelected for selecting.
            </summary>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.SetSelected(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="selected"></param>
            <param name="forceRender"></param>
            <param name="returnIfDisabled"></param>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.ForceRender">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.OnClickHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.OnlyOnClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.OnListParametersChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudListItemExtended`1.GetDisabledStatus">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudListSubheaderExtended`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.MudListExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.ChildContent">
            <summary>
            The child render fragment.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.Gutters">
            <summary>
            Disables the left and right spaces.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.Inset">
            <summary>
            If true subheader has more padding. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.Sticky">
            <summary>
            If true, subheader behaves sticky and remains on top until other subheader comes to top.
            </summary>
        </member>
        <member name="P:MudExtensions.MudListSubheaderExtended`1.SecondaryBackground">
            <summary>
            If true, subheader has darken background.
            </summary>
        </member>
        <member name="T:MudExtensions.MudLoadingButton">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudLoadingButton.#ctor">
            <summary>
            MudLoadingButton constructor.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.Loading">
            <summary>
            Two way binded loading state.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.LoadingChanged">
            <summary>
            Fires when loading changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.LoadingCircularColor">
            <summary>
            Color of circular loading content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.LoadingAdornment">
            <summary>
            Placement of the loading adornment. Default is start.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.StartIcon">
            <summary>
            Icon placed before the text if set.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.Icon">
            <summary>
            Icon placed before the text if set. Only works for IconButton variant. For button variant use Start and EndIcon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.EndIcon">
            <summary>
            Icon placed after the text if set.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.IconColor">
            <summary>
            The color of the icon. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.IconClass">
            <summary>
            Icon class names, separated by space
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.Size">
            <summary>
            The Size of the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.ButtonVariant">
            <summary>
            Variant of button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.Variant">
            <summary>
            The variant to use.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.FullWidth">
            <summary>
            If true, the button will take up 100% of available width.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.LoadingContent">
            <summary>
            Custom loader content. If it is set, the overlap, darken and loadertype parameters ignored.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.ChildContent">
            <summary>
            The child content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.IconSize">
            <summary>
            The size of the icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.Label">
            <summary>
            If applied the text will be added to the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoadingButton.AutoDelay">
            <summary>
            If not null, LoadingButton goes for loading state for determined miliseconds.
            </summary>
        </member>
        <member name="M:MudExtensions.MudLoadingButton.ButtonClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudLoading">
            <summary>
            Loading component that covers a loading content with a parameter.
            </summary>
        </member>
        <member name="M:MudExtensions.MudLoading.#ctor">
            <summary>
            MudLoading constructor.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.TextClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.Loading">
            <summary>
            Two way binded loading state.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.LoadingChanged">
            <summary>
            Fires when loading changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.Overlap">
            <summary>
            If true, the background still remain visible, but user cannot interact them.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.Text">
            <summary>
            The text shows after the loading indicator.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.TextClass">
            <summary>
            CSS classes for the text, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.LoaderClass">
            <summary>
            CSS classes for the progress component, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.TextStyle">
            <summary>
            CSS style for the text.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.LoaderStyle">
            <summary>
            CSS style for the progress component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.Darken">
            <summary>
            If true, show a darken background.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.Color">
            <summary>
            The color of loading indicator. Default is Color.Primary.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.LoaderType">
            <summary>
            Set the indicator type. A middle placed circular or top placed linear progress.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.LoaderContent">
            <summary>
            Custom loader content. If it is set, the overlap, darken and loadertype parameters ignored.
            </summary>
        </member>
        <member name="P:MudExtensions.MudLoading.ChildContent">
            <summary>
            The child content.
            </summary>
        </member>
        <member name="T:MudExtensions.MudPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.Stylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.ChildContent">
            <summary>
            The content inside the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.Column">
            <summary>
            Number of columns. Default is 4.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.Row">
            <summary>
            Number of rows. Default is 4.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.FullScreen">
            <summary>
            Determines MudPage's height.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.Height">
            <summary>
            Determines MudPage's height with a string value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.OnClick">
            <summary>
            Fires when click.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.OnClickStopPropagation">
            <summary>
            If true stop progpagation on click.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.OnContextMenu">
            <summary>
            Fires when context menu (ex. right click).
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.OnContextMenuPreventDefault">
            <summary>
            If true prevent default context menu event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPage.OnContextMenuStopPropagation">
            <summary>
            If true stop propagation context menu event.
            </summary>
        </member>
        <member name="M:MudExtensions.MudPage.OnClickHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudSection">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.ChildContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.Column">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.ColSpan">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.Row">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.RowSpan">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.OnClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.OnClickStopPropagation">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.OnContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.OnContextMenuPreventDefault">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSection.OnContextMenuStopPropagation">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSection.OnClickHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudPasswordField`1">
            <summary>
            Mud input component with enhanced password features.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.#ctor">
            <summary>
            MudPasswordField constructor.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.InputReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.InputType">
            <summary>
            Type of the input element. It should be a valid HTML5 input type.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.DisablePaste">
            <summary>
            If true disable paste to the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.AdornmentTabStop">
            <summary>
            If true, adornment button accepts tab stop. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.AdornmentStart">
            <summary>
            RenderFragment for start adornment.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.CustomAdornment">
            <summary>
            RenderFragment for end adornment.
            </summary>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.FocusAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.BlurAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.SelectAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.ResetValueAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.Clear">
            <summary>
            Clear the text field, set Value to default(T) and Text to null
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.SetText(System.String)">
            <summary>
            Sets the input text from outside programmatically
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.PasswordMode">
            <summary>
            If true, masks text with password mode.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPasswordField`1.PasswordModeChanged">
            <summary>
            Fires when password mode changed.
            </summary>
        </member>
        <member name="M:MudExtensions.MudPasswordField`1.AdornmentClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudPopup">
            <summary>
            Popup content to show useful infos like GDPR.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Stylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.PopupPosition">
            <summary>
            Placement of Popup. Default is bottom.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Open">
            <summary>
            The popup's visible state.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Padding">
            <summary>
            Popup's space between the borders. Has no effect on centered popups.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.EnableAnimation">
            <summary>
            If true, popup appears with a fade animation.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Elevation">
            <summary>
            The higher the number, the heavier the drop-shadow.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Icon">
            <summary>
            The icon at the start of the popup. Can be overridden with ChildContent.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Text">
            <summary>
            The text coming after the icon of the popup. Can be overridden with ChildContent.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.Color">
            <summary>
            Icon and text color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.ChildContent">
            <summary>
            Custom content for override everything.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.ActionContent">
            <summary>
            The action button section. If this renderfragment null, a close icon button will be appear.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.LinkContent">
            <summary>
            The MudLink content continues after the text.
            </summary>
        </member>
        <member name="P:MudExtensions.MudPopup.OpenChanged">
            <summary>
            Fires when popup visible changed.
            </summary>
        </member>
        <member name="M:MudExtensions.MudPopup.GetBreakpoint(MudBlazor.Breakpoint)">
            <summary>
            
            </summary>
            <param name="breakpoint"></param>
        </member>
        <member name="T:MudExtensions.MudRangeSlider`1">
            <summary>
            Mud slider with range abilities.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MudExtensions.MudRangeSlider`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Range">
            <summary>
            If this is a Range Slider
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.LabelText">
            <summary>
            Custom text for ValueLabel
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.UpperLabelText">
            <summary>
            Custom text for upper ValueLabel
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Min">
            <summary>
            The minimum allowed value of the slider. Should not be equal to max.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.SlideableMin">
            <summary>
            The minimum value can slider thumb has.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.SlideableUpperMin">
            <summary>
            The minimum value the upper slider thumb can have.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Max">
            <summary>
            The maximum allowed value of the slider. Should not be equal to min.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.SlideableMax">
            <summary>
            The maximum value can slider thumb has.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.SlideableLowerMax">
            <summary>
            The maximum value the lower slider thumb can have.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.MinDistance">
            <summary>
            The minimum distance between the upper and lower values
            </summary>
            
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Step">
            <summary>
            How many steps the slider should take on each move.
            </summary>
            
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Disabled">
            <summary>
            If true, the slider will be disabled.
            </summary>
            
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.DisableMin">
            <summary>
            If true and <seealso cref="P:MudExtensions.MudRangeSlider`1.Range"/>, the slider's min value will be disabled.
            </summary>
            
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.DisableMax">
            <summary>
            If true and <seealso cref="P:MudExtensions.MudRangeSlider`1.Range"/>, the slider's max value will be disabled.
            </summary>
            
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Converter">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.ValueChanged">
            <summary>
            Fires when value changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.UpperValueChanged">
            <summary>
            Fires when upper value changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Value">
            <summary>
            Value of the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.UpperValue">
            <summary>
            If range set, holds the higher value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Color">
            <summary>
            The color of the component. It supports the Primary, Secondary and Tertiary theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.DisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Display">
            <summary>
            If true, displays the Values below the slider
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Immediate">
            <summary>
            If true, the dragging the slider will update the Value immediately.
            If false, the Value is updated only on releasing the handle.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Vertical">
            <summary>
            If true, displays the slider vertical.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.TickMarks">
            <summary>
            If true, displays tick marks on the track.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.TickMarkLabels">
            <summary>
            Labels for tick marks, will attempt to map the labels to each step in index order.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Size">
            <summary>
            Labels for tick marks, will attempt to map the labels to each step in index order.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.Variant">
            <summary>
            The variant to use.
            </summary>
        </member>
        <member name="P:MudExtensions.MudRangeSlider`1.ValueLabel">
            <summary>
            Displays the value over the slider thumb.
            </summary>
        </member>
        <member name="M:MudExtensions.MudRangeSlider`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudSelectExtended`1">
            <summary>
            Select component with advanced features.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Items">
            <summary>
            The collection of items within this select
            </summary>
        </member>
        <member name="F:MudExtensions.MudSelectExtended`1._items">
            <summary>
            
            </summary>
        </member>
        <member name="F:MudExtensions.MudSelectExtended`1._valueLookup">
            <summary>
            
            </summary>
        </member>
        <member name="F:MudExtensions.MudSelectExtended`1._shadowLookup">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1._currentIcon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.InputClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.InputChipClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.InputClass">
            <summary>
            User class names for the input, separated by space
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.InputStyle">
            <summary>
            User style names for the input, separated by space
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.OnOpen">
            <summary>
            Fired when dropdown opens.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.OnClose">
            <summary>
            Fired when dropdown closes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ChildContent">
            <summary>
            Add the MudSelectItems here
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.StaticContent">
            <summary>
            Optional additional content to display above the list within the popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ShowStaticContentAtEnd">
            <summary>
            Whether to show <see cref="P:MudExtensions.MudSelectExtended`1.StaticContent"/> at the bottom of the popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ItemTemplate">
            <summary>
            Optional presentation template for items
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ItemSelectedTemplate">
            <summary>
            Optional presentation template for selected items
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ItemDisabledTemplate">
            <summary>
            Optional presentation template for disabled items
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ItemDisabledFunc">
            <summary>
            Function to be invoked when checking whether an item should be disabled or not. Works both with renderfragment and ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.TemplateClass">
            <summary>
            Classname for item template or chips.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectValueOnTab">
            <summary>
            If true the active (hilighted) item select on tab key. Designed for only single selection. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.NoWrap">
            <summary>
            If false multiline text show. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.PopoverClass">
            <summary>
            User class names for the popover, separated by space
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.EnablePopoverPadding">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.EnableSelectedItemStyle">
            <summary>
            If true, selected items doesn't have a selected background color.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchBoxPlaceholder">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Dense">
            <summary>
            If true, compact vertical padding will be applied to all Select items.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.OpenIcon">
            <summary>
            The Open Select Icon
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Color">
            <summary>
            Dropdown color of select. Supports theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.CloseIcon">
            <summary>
            The Close Select Icon
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ValuePresenter">
            <summary>
            The value presenter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectAll">
            <summary>
            If set to true and the MultiSelection option is set to true, a "select all" checkbox is added at the top of the list of items.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectAllPosition">
            <summary>
            Sets position of the Select All checkbox
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectAllText">
            <summary>
            Define the text of the Select All option.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.MultiSelectionTextFunc">
            <summary>
            Function to define a customized multiselection text.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchFunc">
            <summary>
            Custom search func for searchbox. If doesn't set, it search with "Contains" logic by default. Passed value and searchString values.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ItemCollection">
            <summary>
            If not null, select items will automatically created regard to the collection.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Virtualize">
            <summary>
            Allows virtualization. Only work is ItemCollection parameter is not null.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ChipCloseable">
            <summary>
            If true, chips has close button and remove from SelectedValues when pressed the close button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ChipClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ChipVariant">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ChipSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Delimiter">
            <summary>
            Parameter to define the delimited string separator.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.RelativeWidth">
            <summary>
            If true popover width will be the same as the select component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.MaxHeight">
            <summary>
            Sets the maxheight the Select can have when open.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.AnchorOrigin">
            <summary>
            Set the anchor origin point to determen where the popover will open from.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.TransformOrigin">
            <summary>
            Sets the transform origin point for the popover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Strict">
            <summary>
            If true, the Select's input will not show any values that are not defined in the dropdown.
            This can be useful if Value is bound to a variable which is initialized to a value which is not in the list
            and you want the Select to show the label / placeholder instead.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchBox">
            <summary>
            If true, shows a searchbox for filtering items. Only works with ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchBoxAutoFocus">
            <summary>
            If true, the search-box will be focused when the dropdown is opened.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchBoxClearable">
            <summary>
            If true, the search-box has a clear icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchBoxVariant">
            <summary>
            Search box text field variant.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SearchBoxAdornment">
            <summary>
            Search box icon position.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.OnSearchStringChange">
            <summary>
            Fired when the search value changes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.LockScroll">
            <summary>
            If true, prevent scrolling while dropdown is open.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.CheckedIcon">
            <summary>
            Custom checked icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.UncheckedIcon">
            <summary>
            Custom unchecked icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.IndeterminateIcon">
            <summary>
            Custom indeterminate icon.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.MultiSelection">
            <summary>
            If true, multiple values can be selected via checkboxes which are automatically shown in the dropdown
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.MultiSelectionAlign">
            <summary>
            The MultiSelectionComponent's placement. Accepts Align.Start and Align.End
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.MultiSelectionComponent">
            <summary>
            The component which shows as a MultiSelection check.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.Comparer">
            <summary>
            The Comparer to use for comparing selected values internally.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.ToStringFunc">
            <summary>
            Defines how values are displayed in the drop-down list
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectedValues">
            <summary>
            Set of selected values. If MultiSelection is false it will only ever contain a single value. This property is two-way bindable.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectedListItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectedListItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectedValuesChanged">
            <summary>
            Fires when SelectedValues changes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.SelectedListItemsChanged">
            <summary>
            Should only be used for debugging and development purposes.
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.SetCustomizedTextAsync(System.String,System.Boolean,System.Collections.Generic.List{`0},System.Func{System.Collections.Generic.List{`0},System.String})">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="updateValue"></param>
            <param name="selectedConvertedValues"></param>
            <param name="multiSelectionTextFunc"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.UpdateValuePropertyAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateText"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.UpdateTextPropertyAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="updateValue"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.ForceUpdateItems">
            <summary>
            Refresh all items.
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.DisposeAsyncCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.HandleKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Keydown event.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.HandleKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Keyup event.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.OnLostFocus(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Blur event.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.FocusAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.BlurAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.SelectAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.ToggleMenu">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.OpenMenu">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.CloseMenu">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.SelectOption(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.SelectOption(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.ForceUpdate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.BeginValidatePublic">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.Add(MudExtensions.MudSelectItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.Remove(MudExtensions.MudSelectItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.RegisterShadowItem(MudExtensions.MudSelectItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.UnregisterShadowItem(MudExtensions.MudSelectItemExtended{`0})">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.SelectClearButtonClickHandlerAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Extra handler for clearing selection.
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.Clear">
            <summary>
            Clear the selection
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.ResetValueAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudSelectExtended`1.IsValueInList">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.UpdateIcon">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.CheckGenericTypeMatch(System.Object)">
            <summary>
            
            </summary>
            <param name="select_item"></param>
            <exception cref="T:MudBlazor.Utilities.Exceptions.GenericTypeMismatchException"></exception>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.HasValue(`0)">
            <summary>
            Fixes issue #4328
            Returns true when MultiSelection is true and it has selected values(Since Value property is not used when MultiSelection=true
            </summary>
            <param name="value"></param>
            <returns>True when component has a value</returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.ChipClosed(MudBlazor.MudChip{`0})">
            <summary>
            
            </summary>
            <param name="chip"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectExtended`1.GetOpenState">
            <summary>
            returns the value of the internal property _isOpen 
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudSelectItemExtended`1">
            <summary>
            Represents an option of a select or multi-select. To be used inside MudSelect.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.ListItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.IMudSelectExtended">
            <summary>
            The parent select component
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.IsFunctional">
            <summary>
            Functional items does not hold values. If a value set on Functional item, it ignores by the MudSelect. They cannot be subject of keyboard navigation and selection.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.Text">
            <summary>
            The text to display
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.HideContent">
            <summary>
            Select items with HideContent==true are only there to register their RenderFragment with the select but
            wont render and have no other purpose!
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.Value">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.Href">
            <summary>
            The URL to navigate to when this item is clicked.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.ChildContent">
            <summary>
            The content within this item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.MultiSelection">
            <summary>
            Mirrors the MultiSelection status of the parent select
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.OnClick">
            <summary>
            OnClick event.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.Disabled">
            <summary>
            Prevents the user from interacting with this item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemExtended`1.DisplayString">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectItemExtended`1.HandleOnClickAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectItemExtended`1.GetDisabledStatus">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSelectItemExtended`1.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudSelectItemGroupExtended`1">
            <summary>
            Represents an option of a select or multi-select. To be used inside MudSelect.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.Value">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.Text">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.ChildContent">
            <summary>
            The content within this item.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.Nested">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.InitiallyExpanded">
            <summary>
            Sets the group's expanded state on popover opening. Works only if nested is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.Sticky">
            <summary>
            Sticky header for item group. Works only with nested is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSelectItemGroupExtended`1.HideContent">
            <summary>
            Select items with HideContent==true are only there to register their RenderFragment with the select but
            wont render and have no other purpose!
            </summary>
        </member>
        <member name="M:MudExtensions.MudSelectItemGroupExtended`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudSignaturePad">
            <summary>
            Signature pad component.
            </summary>
        </member>
        <member name="M:MudExtensions.MudSignaturePad.#ctor">
            <summary>
            Constructor for MudSignaturePad.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.CanvasContainerClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ToolbarClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ValueChanged">
            <summary>
            Fires when value changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.LocalizedStrings">
            <summary>
            Localized strings for Signature Pad.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.Options">
            <summary>
            Options for the signature pad.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ToolbarClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ToolbarStyle">
            <summary>
            Style for the toolbar.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.OuterClass">
            <summary>
            Outer class for the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.Elevation">
            <summary>
            Shadow level of the component. Default is 4.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.CanvasContainerClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.CanvasContainerStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ShowClear">
            <summary>
            Shows the eraser toggle button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ShowLineWidth">
             <summary>
            
             </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ShowStrokeStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ShowDownload">
             <summary>
            
             </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ShowLineJoinStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ShowLineCapStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.Dense">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.Variant">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.Color">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSignaturePad.ToolbarContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSignaturePad.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSignaturePad.DisposeAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSignaturePad.SignatureDataChangedAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSignaturePad.NotifyBrowserViewportChangeAsync(MudBlazor.BrowserViewportEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.SignaturePadOptions">
            <summary>
            Option class for SignaturePad.
            </summary>
        </member>
        <member name="T:MudExtensions.MudSpeedDial">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.#ctor">
            <summary>
            MudLoading constructor.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.StackClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Stylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.PopoverClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Open">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.OpenOnHover">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.OpenOnClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.CloseWhenClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Padding">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.OnMainButtonClick">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.IconOnOpen">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Color">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.ChildContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.ActivatorContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSpeedDial.Origin">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.GetIcon">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.ChangeMenu(System.Boolean)">
            <summary>
            
            </summary>
            <param name="open"></param>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.ToggleMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.OpenMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.CloseMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.MainButtonClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.RootMouseEnter">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.PopoverMouseEnter">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.PopoverMouseLeave">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.WaitToClose">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.HandlePopoverClick">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSpeedDial.UpdateOrigin">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudSplitter">
            <summary>
            Split two panels with a bar.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.ContentClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.SliderClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.ClassContent">
            <summary>
            The two contents' (sections) classes, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.Height">
            <summary>
            The height of splitter. For example: "400px"
            </summary>
            <remarks>The default is 100%</remarks>
        </member>
        <member name="P:MudExtensions.MudSplitter.Color">
            <summary>
            The height of splitter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.Bordered">
            <summary>
            If true, splitter has borders.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.ContentStyle">
            <summary>
            The style to apply to both content sections, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.StartContentStyle">
            <summary>
            The style of the <see cref="P:MudExtensions.MudSplitter.StartContent"/>, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.EndContentStyle">
            <summary>
            The style of the <see cref="P:MudExtensions.MudSplitter.EndContent"/>, seperated by space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.BarStyle">
            <summary>
            The splitter bar's styles, seperated by space. The style string should end with: "!important;"
            </summary>
            <remarks>The default is 2px</remarks>
        </member>
        <member name="P:MudExtensions.MudSplitter.Sensitivity">
            <summary>
            The slide sensitivity that should between 0.01 and 10. Smaller values increase the smooth but reduce performance. Default is 0.1
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.EnableSlide">
            <summary>
            If true, user can interact with splitter bar.
            </summary>
            <remarks>The default is true</remarks>
        </member>
        <member name="P:MudExtensions.MudSplitter.EnableMargin">
            <summary>
            Enables the default margin.
            </summary>
            <remarks>The default is true, which adds class: "ma-2"</remarks>
        </member>
        <member name="P:MudExtensions.MudSplitter.StartContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.EndContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.Dimension">
            <summary>
            The start content's percentage.
            Default is 50.
            </summary>
            <remarks>The default is 50</remarks>
        </member>
        <member name="P:MudExtensions.MudSplitter.DimensionChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSplitter.OnDoubleClicked">
            <summary>
            Fires when double click.
            </summary>
        </member>
        <member name="M:MudExtensions.MudSplitter.UpdateDimension(System.Double)">
            <summary>
            
            </summary>
            <param name="percentage"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudStepExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.MudStepperExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Title">
            <summary>
            Step text to show on header.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Order">
            <summary>
            The order of the step.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.IsActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Status">
            <summary>
            The step status flag to show step is continued, skipped or completed. Do not set it directly unless you know what you do exactly.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Optional">
            <summary>
            If true the step is skippable.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.IsResultStep">
            <summary>
            If true, the step show when the stepper is completed. There should be only one result step.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.ChildContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.StatusChanged">
            <summary>
            Fires when step status changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Number">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Template">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepExtended.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepExtended.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepExtended.SetStatus(MudExtensions.StepStatus)">
            <summary>
            
            </summary>
            <param name="status"></param>
        </member>
        <member name="M:MudExtensions.MudStepExtended.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudStepperExtended">
            <summary>
            Stepper component with extended features.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.HeaderClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ContentClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ActionClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.AvatarStylename">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetMobileStyle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetStepperStyle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetStepperSubStyle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetStepPercent">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetStepClass">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetProgressLinearStyle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.UpdateProgressValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ContentClass">
            <summary>
            Provides CSS classes for the step content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ContentStyle">
            <summary>
            Provides CSS styles for the step content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ActionClass">
            <summary>
            Provides CSS classes for the step actions.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.StepperActionsJustify">
            <summary>
            Determines how action buttons justified.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Linear">
            <summary>
            If true, the header can not be clickable and users can step one by one.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Ripple">
            <summary>
            If true, disables ripple effect when click on step headers.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Animation">
            <summary>
            If true, disables the default animation on step changing.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ShowPreviousButton">
            <summary>
            If true, disables built-in "previous" step action button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ShowNextButton">
            <summary>
            If true, disables built-in "next" step action button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ShowSkipButton">
            <summary>
            If true, disables built-in "skip" step action button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ShowStepResultIndicator">
            <summary>
            If true, disables built-in "completed"/"skipped" step result indictors shown in the actions panel.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.MobileView">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Loading">
            <summary>
            If true, a linear loading indicator shows under the header.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.StaticContent">
            <summary>
            A static content that always show with all steps.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.IconActionButtons">
            <summary>
            If true, action buttons have icons instead of text to gain more space.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Color">
            <summary>
            The predefined Mud color for header and action buttons.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Variant">
            <summary>
            The variant for header and action buttons.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.HeaderBadgeView">
            <summary>
            Choose header badge view. Default is all.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.HeaderSize">
            <summary>
            Choose header text view. Default is all.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.HeaderTextView">
            <summary>
            Choose header text view. Default is all.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Vertical">
            <summary>
            Choose header alignment
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.LocalizedStrings">
            <summary>
            A class for provide all local strings at once.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ChildContent">
            <summary>
            The child content where MudSteps should be inside.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ActionContent">
            <summary>
            Custom content to be shown between the "previous" and "next" action buttons.
            </summary>
            <remarks>
            If set, you must also supply a <code><MudSpacer /></code> somewhere in your render fragment
            to ensure that the built-in action buttons are aligned correctly.
            </remarks>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.ActiveStepChanged">
            <summary>
            Fires when active step changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.PreventStepChangeAsync">
            <summary>
            Runs a task to prevent step change. Has change direction (backwards or forwards) and target index and returns a bool value.
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepperExtended.Steps">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.ReorderSteps">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.SetActiveIndex(MudExtensions.MudStepExtended,System.Boolean)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <param name="skipPreventProcess"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.SetActiveIndex(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="count"></param>
            <param name="firstCompleted"></param>
            <param name="skipPreventProcess"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.SetActiveStepByIndex(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="firstCompleted"></param>
            <param name="skipPreventProcess"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.CompleteStep(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="moveToNextStep"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.SkipStep(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="moveToNextStep"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.IsStepActive(MudExtensions.MudStepExtended)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.CompletedStepCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetNextButtonString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.ShowResultStep">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.HasResultStep">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.IsAllStepsCompleted">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.GetActiveIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.SetStepStatus(System.Int32,MudExtensions.StepStatus)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="status"></param>
        </member>
        <member name="M:MudExtensions.MudStepperExtended.ForceRender">
            <summary>
            Update all component and render again.
            </summary>
        </member>
        <member name="T:MudExtensions.MudStepTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudStepTemplate.Step">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudStepTemplate.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudSwitchM3`1">
            <summary>
            Switch component with M3 specifications.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.SwitchSpanClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.SwitchClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.TrackClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.IconStylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.ThumbIcon">
            <summary>
            Shows an icon on Switch's thumb.
            </summary>
        </member>
        <member name="P:MudExtensions.MudSwitchM3`1.ThumbOffIcon">
            <summary>
            Shows an icon on Switch's thumb (off state).
            </summary>
        </member>
        <member name="M:MudExtensions.MudSwitchM3`1.HandleKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Keydown event.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:MudExtensions.MudSwitchM3`1.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudSwitchM3`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudSwitchM3`1.DisposeAsyncCore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudTeleport">
            <summary>
            Teleport content to different containers.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTeleport.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTeleport.To">
            <summary>
            The class name that shows the parent which the teleport content will teleport.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTeleport.OwnClass">
            <summary>
            The class name that used to return teleport content to the container.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTeleport.ReturnWhenNotFound">
            <summary>
            If true teleported content returns the container, otherwise the content remains the last teleported place. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTeleport.ChildContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudTeleport.OnParametersSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudTeleport.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTeleport.Update">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTeleport.Reset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTeleport.DisposeAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudTextFieldExtended`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.SubscribeToParentForm2">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.InputReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.AutoSize">
            <summary>
            If true, automatically resize the height regard to the text. Needs Lines parameter to set more than 1.
            </summary>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.ForceAutoSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.DataVisualiser">
            <summary>
            The render fragment for child content.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.InputType">
            <summary>
            Type of the input element. It should be a valid HTML5 input type.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.ShowVisualiser">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.FocusAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.BlurAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.SelectAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.SelectRangeAsync(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pos1"></param>
            <param name="pos2"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.ResetValueAsync">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.Clear">
            <summary>
            Clear the text field, set Value to default(T) and Text to null
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.SetText(System.String)">
            <summary>
            Sets the input text from outside programmatically
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudTextFieldExtended`1.Mask">
            <summary>
            Provide a masking object. Built-in masks are PatternMask, MultiMask, RegexMask and BlockMask
            Note: when Mask is set, TextField will ignore some properties such as Lines, Pattern or HideSpinButtons, OnKeyDown and OnKeyUp, etc.
            </summary>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.SetValueAsync(`0,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="updateText"></param>
            <param name="force"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTextFieldExtended`1.SetTextAsync(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="updateValue"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudToggle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudToggle.GetStyle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudToggle.Toggled">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.ToggledChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.ClassCommon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.ClassToggled">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.StyleToggled">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.StyleCommon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.ChildContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.ToggleContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudToggle.OnClick">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudToggle.HandleOnClick">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudTransferList`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StartClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.EndClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StartStylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.EndStylename">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StartCollection">
            <summary>
            The start list's collection.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StartCollectionChanged">
            <summary>
            Fires when start collection changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.EndCollection">
            <summary>
            The end list's collection.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.EndCollectionChanged">
            <summary>
            Fires when end collection changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.ToStringFunc">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.OnTransferStart">
            <summary>
            Fires before transfer process start. Useful to backup items or prevent transfer.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.PreventTransfer">
            <summary>
            Fires when start collection changed. Takes a "StartToEnd" direction bool parameter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.OrderFunc">
            <summary>
            Fires when start collection changed. Takes a "StartToEnd" direction bool parameter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StartTitleContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.EndTitleContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StartTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.EndTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.Disabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.SearchBoxStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.SearchBoxEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.AllowDoubleClick">
            <summary>
            If true, double click transfers the item. Doesn't have any effect on multitransfer is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.MultiSelection">
            <summary>
            Allows the transfer multiple items at once.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.MultiSelectionComponent">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.SelectAllType">
            <summary>
            Select all types. If button is selected, 2 transfer all button appears. If Selectall item is selected, a list item appears.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.Color">
            <summary>
            The color of lists and buttons. Default is primary.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.ButtonVariant">
            <summary>
            The variant of buttons.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.SelectAllText">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.Spacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.ButtonSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.MaxItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.ClassStartList">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.ClassEndList">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.ClassListCommon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StyleStartList">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StyleEndList">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTransferList`1.StyleListCommon">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudTransferList`1.Transfer(System.Boolean)">
            <summary>
            
            </summary>
            <param name="startToEnd"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTransferList`1.TransferAll(System.Boolean)">
            <summary>
            
            </summary>
            <param name="startToEnd"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTransferList`1.GetStartListSelectedValues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTransferList`1.GetEndListSelectedValues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudTransferList`1.OrderItems">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudTransferList`1.DoubleClick(MudExtensions.ListItemClickEventArgs{`0})">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudTextM3">
            <summary>
            MudText component with M3 specification.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.ClassName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.StyleString">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.RightToLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.Typo">
            <summary>
            Set the text-align on the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.Size">
            <summary>
            Set the text-align on the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.Align">
            <summary>
            Set the text-align on the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.Color">
            <summary>
            The color of the component. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.GutterBottom">
            <summary>
            If true, the text will have a bottom margin.
            </summary>
        </member>
        <member name="P:MudExtensions.MudTextM3.Inline">
            <summary>
            If true, Sets display inline
            </summary>
        </member>
        <member name="T:MudExtensions.MudTypographyProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudTypographyProvider.TypographyM3">
            <summary>
            Typography definitions
            </summary>
        </member>
        <member name="M:MudExtensions.MudTypographyProvider.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.MudWatch">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudWatch.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Interval">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.CountdownTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Delimiter">
            <summary>
            The delimiter string that seperates hour, minute, second and millisecond values.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.ShowDay">
            <summary>
            If true, components shows days. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.ShowHour">
            <summary>
            If true, components shows hours. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.ShowMinute">
            <summary>
            If true, components shows minutes. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.ShowSecond">
            <summary>
            If true, components shows seconds. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.ShowMillisecond">
            <summary>
            If true, components shows milliseconds. Default is true.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Wheel">
            <summary>
            If true, components shows MudWheels.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Typo">
            <summary>
            If true, components shows MudWheels.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.TypoMillisecond">
            <summary>
            If true, components shows MudWheels.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.ValueChanged">
            <summary>
            Fires when value changed.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.CountdownCompleted">
            <summary>
            Fires when countdown reach to 0.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Dense">
            <summary>
            Determines the wheels are dense or not.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.Color">
            <summary>
            The color of various parts of the component.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.LapRecords">
            <summary>
            The records that builds with Lap method or created manually.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWatch.LapRecordsChanged">
            <summary>
            Fires when new lap record added.
            </summary>
        </member>
        <member name="M:MudExtensions.MudWatch.Elapse(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:MudExtensions.MudWatch.Stop">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWatch.Reset">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWatch.Start">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudWatch.Lap">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudWatch.SetWatchMode(MudExtensions.WatchMode)">
            <summary>
            
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWatch.SetInternalValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudWatch.GetWatchText">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWatch.NumberToString(System.Int32)">
            <summary>
            
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.MudWheel`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudExtensions.MudWheel`1.ScrollManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.Classname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.InnerClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.MiddleItemClassname">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.MudWheel`1.OuterItemClassname(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:MudExtensions.MudWheel`1.BorderClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.EmptyItemClassname">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.ItemCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.WheelLevel">
            <summary>
            Determines how many items will show before and after the middle one.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.Sensitivity">
            <summary>
            The minimum swipe delta to change wheel value on touch devices. Default is 40.
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.InnerClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.Dense">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.SmoothBorders">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.Color">
            <summary>
            Color for middle item and borders
            </summary>
        </member>
        <member name="P:MudExtensions.MudWheel`1.ToStringFunc">
            <summary>
            Defines how values are displayed in the drop-down list
            </summary>
        </member>
        <member name="M:MudExtensions.MudWheel`1.GetStylename">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWheel`1.HandleOnWheel(Microsoft.AspNetCore.Components.Web.WheelEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWheel`1.HandleOnSwipe(MudBlazor.SwipeEventArgs)">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWheel`1.ChangeWheel(System.Int32)">
            <summary>
            
            </summary>
            <param name="changeCount"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWheel`1.RefreshAnimate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWheel`1.GetIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.MudWheel`1.GetAnimateValue">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.EnumExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.EnumExtensions.ToDescriptionString(System.Enum)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.Services.ExtensionServiceCollectionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.Services.ExtensionServiceCollectionExtensions.AddScrollManagerExtended(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds ScrollManagerExtended as a transient instance.
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:MudExtensions.Services.ExtensionServiceCollectionExtensions.AddMudCssManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds CssManager as a transient instance.
            </summary>
            <param name="services">IServiceCollection</param>
        </member>
        <member name="M:MudExtensions.Services.ExtensionServiceCollectionExtensions.AddMudTeleportManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds TeleportManager as a transient instance.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ExtensionServiceCollectionExtensions.AddMudExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,MudBlazor.Services.MudServicesConfiguration)">
            <summary>
            Adds common services required by MudBlazor components
            </summary>
            <param name="services">IServiceCollection</param>
            <param name="configuration">Defines options for all MudBlazor services.</param>
            <returns>Continues the IServiceCollection chain.</returns>
        </member>
        <member name="M:MudExtensions.Services.ExtensionServiceCollectionExtensions.AddMudExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MudBlazor.Services.MudServicesConfiguration})">
            <summary>
            Adds common services required by MudBlazor components
            </summary>
            <param name="services">IServiceCollection</param>
            <param name="configuration">Defines options for all MudBlazor services.</param>
            <returns>Continues the IServiceCollection chain.</returns>
        </member>
        <member name="T:MudExtensions.Services.IScrollManagerExtended">
            <summary>
            Inject with the AddMudBlazorScrollServices extension
            </summary>
        </member>
        <member name="M:MudExtensions.Services.IScrollManagerExtended.ScrollToMiddleAsync(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="parentId"></param>
            <param name="childId"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.Services.ScrollManagerExtended">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            
            </summary>
            <param name="jSRuntime"></param>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToAsync(System.String,System.Int32,System.Int32,MudExtensions.Services.ScrollBehavior)">
            <summary>
            Scrolls to the coordinates of the element.
            </summary>
            <param name="id">id of element</param>
            <param name="left">x coordinate</param>
            <param name="top">y coordinate</param>
            <param name="behavior">smooth or auto</param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollIntoViewAsync(System.String,MudExtensions.Services.ScrollBehavior)">
            <summary>
            Scrolls the first instance of the selector into view.
            </summary>
            <param name="selector"></param>
            <param name="behavior"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToTopAsync(System.String,MudExtensions.Services.ScrollBehavior)">
            <summary>
            Scrolls to the top of the element.
            </summary>
            <param name="id">id of element</param>
            <param name="scrollBehavior">smooth or auto</param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToBottomAsync(System.String,MudExtensions.Services.ScrollBehavior)">
            <summary>
            Scroll to the bottom of the element (or if not found to the bottom of the page).
            </summary>
            <param name="id">id of element of null to scroll to page bottom</param>
            <param name="behavior">smooth or auto</param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToYearAsync(System.String)">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToListItemAsync(System.String)">
            <summary>
            
            </summary>
            <param name="elementId"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.LockScrollAsync(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="selector"></param>
            <param name="cssClass"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.UnlockScrollAsync(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="selector"></param>
            <param name="cssClass"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToFragmentAsync(System.String,MudExtensions.Services.ScrollBehavior)">
            <summary>
            Scroll to an url fragment
            </summary>
            <param name="id">The id of the selector that is going to be scrolled to</param>
            <param name="behavior">smooth or auto</param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Services.ScrollManagerExtended.ScrollToMiddleAsync(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="parentId"></param>
            <param name="childId"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.Services.ScrollBehavior">
            <summary>
            Smooth: scrolls in a smooth fashion;
            Auto: is immediate
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.CsvMapperLocalizedStrings">
            <summary>
            Localized strings for CSV Mapper.
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.DateWheelPickerLocalizedStrings">
            <summary>
            Localized strings for DateWheelPicker.
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.GoogleFonts">
            <summary>
            Class for Google Font names.
            </summary>
        </member>
        <member name="F:MudExtensions.Utilities.GoogleFonts.FontListLatin">
            <summary>
            Google latin font list.
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.KeyframeBuilder">
            <summary>
            Generates CSS animation keyframes for MudAnimate.
            </summary>
        </member>
        <member name="M:MudExtensions.Utilities.KeyframeBuilder.Build(System.Int32,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
            <param name="values"></param>
            <param name="property"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Utilities.KeyframeBuilder.Build(System.Int32,System.Collections.Generic.List{System.Tuple{System.String,System.String}},System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ticks"></param>
            <param name="values"></param>
            <param name="property"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.Utilities.KeyframePreset">
            <summary>
            Built-in keyframe values.
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.LapRecord">
            <summary>
            Holds value for MudWatch.
            </summary>
        </member>
        <member name="P:MudExtensions.Utilities.LapRecord.TotalTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:MudExtensions.Utilities.LapRecord.Gap">
            <summary>
            Difference between previous timespan.
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.MudCssManager">
            <summary>
            Manage CSS properties with C#.
            </summary>
        </member>
        <member name="M:MudExtensions.Utilities.MudCssManager.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            
            </summary>
            <param name="jsRuntime"></param>
        </member>
        <member name="M:MudExtensions.Utilities.MudCssManager.SetCss(System.String,MudExtensions.Utilities.CssProp,System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="cssProp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Utilities.MudCssManager.SetCss(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="cssPropName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Utilities.MudCssManager.GetCss(System.String,MudExtensions.Utilities.CssProp)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="cssProp"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Utilities.MudCssManager.GetCss(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="cssPropName"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.Utilities.CssProp">
            <summary>
            
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.MudTeleportManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:MudExtensions.Utilities.MudTeleportManager.#ctor(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            
            </summary>
            <param name="jsRuntime"></param>
        </member>
        <member name="M:MudExtensions.Utilities.MudTeleportManager.Teleport(Microsoft.AspNetCore.Components.ElementReference,System.String)">
            <summary>
            
            </summary>
            <param name="reference"></param>
            <param name="toTeleport"></param>
            <returns></returns>
        </member>
        <member name="M:MudExtensions.Utilities.MudTeleportManager.RemoveFromDom(Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            
            </summary>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="T:MudExtensions.Utilities.SignaturePadLocalizedStrings">
            <summary>
            Localized strings for MudSignaturePad
            </summary>
        </member>
        <member name="T:MudExtensions.Utilities.StepperLocalizedStrings">
            <summary>
            Localized strings for MudStepper
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Selector">
            <summary>
            Supports id and class selection. Use "#idName" for id selectors (ex. <Component id="idName" />) or ".idName" for class selectors (ex. <Component Class="idName" />). Leave it null or empty to effect all scrollbars.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.AnimationType">
            <summary>
            The predefined animation type that runs.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Value">
            <summary>
            The primary value depends on animation type.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.ValueSecondary">
            <summary>
            The secondary value that sets the start value of animation.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Duration">
            <summary>
            Sets how long the animation will last.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Delay">
            <summary>
            The time before animation starts.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Hover">
            <summary>
            If true, amination runs when hover.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Infinite">
            <summary>
            If true, amination runs contuniously.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.Paused">
            <summary>
            If true, animation pauses. Set if false again to continue where it pauses.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.IterationCount">
            <summary>
            How many times the animation repeats in one run. If the value is 0, the animation doesn't run.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.AnimationTiming">
            <summary>
            The speed curve of the animation.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.AnimationDirection">
            <summary>
            The running line of the animation.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.AnimationFillMode">
            <summary>
            Determines the styles which the element has. Forwards for last keyframe, backwards for first keyframe.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.KeyframeAdvanced">
            <summary>
            Animation keyframe with plain string. For advanced users.
            </summary>
        </member>
        <member name="P:MudExtensions.MudAnimate.RefreshSensitivity">
            <summary>
            The refresh delay in miliseconds. Higher value means stability between multiple refreshes.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.Selector">
            <summary>
            Supports id and class selection. Use "#idName" for id selectors (ex. <Component id="idName" />) or ".idName" for class selectors (ex. <Component Class="idName" />). Leave it null or empty to effect all.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.Always">
            <summary>
            If true, selected colors applies even the input does not have focus. Default is false.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.BaseColor">
            <summary>
            The base color that affects text, label and borders. Can be overrided with other color parameters. Supports hex values "#ffffff", valid keywords "blue" and CSS variables "var(--mud-palette-primary)"
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.TextColor">
            <summary>
            The text color. Supports hex values "#ffffff", valid keywords "blue" and CSS variables "var(--mud-palette-primary)"
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.LabelStyle">
            <summary>
            The label style. Add !important if style doesn't applied.
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.LabelColor">
            <summary>
            The label text color. Supports hex values "#ffffff", valid keywords "blue" and CSS variables "var(--mud-palette-primary)"
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.LabelBackgroundColor">
            <summary>
            The label background color. Supports hex values "#ffffff", valid keywords "blue" and CSS variables "var(--mud-palette-primary)"
            </summary>
        </member>
        <member name="P:MudExtensions.MudInputStyler.BorderColor">
            <summary>
            The border color. Supports hex values "#ffffff", valid keywords "blue" and CSS variables "var(--mud-palette-primary)"
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.Selector">
            <summary>
            Supports id and class selection. Use "#idName" for id selectors (ex. <Component id="idName" />) or ".idName" for class selectors (ex. <Component Class="idName" />). Leave it null or empty to effect all scrollbars.
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.FirefoxStyle">
            <summary>
            Firefox ignores the other parameters. It can be only done with this parameter.
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.ThumbStyle">
            <summary>
            Custom thumb styles for scrollbar. Must end with ";" character for each style. Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.TrackStyle">
            <summary>
            Custom track styles for scrollbar. Must end with ";" character for each style. Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.Width">
            <summary>
            Width of both scrollbar thumb and track. Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.HoverWidth">
            <summary>
            Width of both scrollbar thumb and track on hover. Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.BorderRadius">
            <summary>
            Border radius for scrollbar thumb. Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.Color">
            <summary>
            Color for scrollbar thumb. Supports hex values, color names and MudTheme color keywords (ex. "primary", "secondary"). Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.ContainerHoverColor">
            <summary>
            Scrollbar's color when container hovered. Supports hex values, color names and MudTheme color keywords (ex. "primary", "secondary"). Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.HoverColor">
            <summary>
            Hover color for scrollbar thumb on hover. Supports hex values, color names and MudTheme color keywords (ex. "primary", "secondary"). Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.TrackColor">
            <summary>
            Track color for scrollbar track. Supports hex values, color names and MudTheme color keywords (ex. "primary", "secondary"). Doesn't support by firefox (see FirefoxStyle).
            </summary>
        </member>
        <member name="P:MudExtensions.MudScrollbar.Hide">
            <summary>
            Hide the scrollbar with securing scroll functionality. Also supported by firefox.
            </summary>
        </member>
    </members>
</doc>
